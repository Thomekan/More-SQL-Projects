/*
 * Exercise 3: Creating a Stored Procedure
The icon fields are calculated based on the value in the corresponding score field. 
You need to make sure that when a score field is updated, the icon field is updated too. 
To do this, you will write a stored procedure that receives the school id and a 
leaders score as input parameters, calculates the icon setting and updates the 
fields appropriately.

Question 1
Write the structure of a query to create or replace a stored procedure called
 UPDATE_LEADERS_SCORE that takes a in_School_ID parameter as an integer and 
a in_Leader_Score parameter as an integer. 
Don't forget to use the #SET TERMINATOR statement to use 
the @ for the CREATE statement terminator.
Take a screenshot showing the SQL query.

Question 2
Inside your stored procedure, write a SQL statement to update the Leaders_Score field in 
the CHICAGO_PUBLIC_SCHOOLS table for the school identified 
by in_School_ID to the value in the in_Leader_Score parameter.
Take a screenshot showing the SQL query.

Question 3
Inside your stored procedure, write a SQL IF statement to update the Leaders_Icon field in the CHICAGO_PUBLIC_SCHOOLS table for the school identified by in_School_ID using the following information.
Score lower limit	Score upper limit	Icon
80	99	Very strong
60	79	Strong
40	59	Average
20	39	Weak
0	19	Very weak *
 */

--Q1

--#SET TERMINATOR @
CREATE or REPLACE procedure UPDATE_LEADERS_SCORE (
	IN in_School_ID INTEGER, IN in_Leader_Score INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA
  BEGIN
  END 
  @

--Q2

--#SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE (
	IN in_School_ID INTEGER, IN in_Leader_Score INTEGER)
LANGUAGE SQL
MODIFIES SQL DATA
	BEGIN
    UPDATE CHICAGO_PUBLIC_SCHOOLS
    SET Leaders_Score = in_Leader_Score
    WHERE School_ID = in_School_ID;
END @

  
--Q3

--#SET TERMINATOR @
CREATE OR REPLACE PROCEDURE UPDATE_LEADERS_SCORE (
    IN in_School_ID INTEGER, IN in_Leader_Score INTEGER) 
LANGUAGE SQL 
MODIFIES SQL DATA
  BEGIN
    UPDATE CHICAGO_PUBLIC_SCHOOLS
    SET Leaders_Score = in_Leader_Score
    WHERE School_ID = in_School_ID;
    IF in_Leader_Score >=  80 THEN 
        UPDATE CHICAGO_PUBLIC_SCHOOLS
        SET Leaders_Icon = 'Very_Strong'
        WHERE School_ID = in_School_ID;
    ELSEIF in_Leader_Score >= 60 and in_Leader_Score <= 79  THEN
        UPDATE CHICAGO_PUBLIC_SCHOOLS
        SET Leaders_Icon = 'Strong'
        WHERE School_ID = in_School_ID;
    ELSEIF in_Leader_Score >=  40 and in_Leader_Score <=  59  THEN
        UPDATE CHICAGO_PUBLIC_SCHOOLS
        SET Leaders_Icon = 'Average'
        WHERE School_ID = in_School_ID;
    ELSEIF in_Leader_Score >=  20 and in_Leader_Score <=  39  THEN
        UPDATE CHICAGO_PUBLIC_SCHOOLS
        SET Leaders_Icon = 'Weak'
        WHERE School_ID = in_School_ID;
    ELSE
        UPDATE CHICAGO_PUBLIC_SCHOOLS
        SET Leaders_Icon = 'Very Weak'
        WHERE School_ID = in_School_ID;
        END IF;
  END 
  @
  
  -- Q4
  
SELECT LEADERS_ICON, LEADERS_SCORE from CHICAGO_PUBLIC_SCHOOLS where SCHOOL_ID=610213;
CALL UPDATE_LEADERS_SCORE(610213, 50);        -- Caller query
SELECT LEADERS_ICON, LEADERS_SCORE from CHICAGO_PUBLIC_SCHOOLS where SCHOOL_ID=610213;
